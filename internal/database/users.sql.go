// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, created_at, updated_at, email)
VALUES (gen_random_uuid(), NOW(), NOW(), $1)
RETURNING id, created_at, updated_at, email
`

func (q *Queries) CreateUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
	)
	return i, err
}

const reset = `-- name: Reset :one
DELETE FROM users RETURNING NULL
`

func (q *Queries) Reset(ctx context.Context) (interface{}, error) {
	row := q.db.QueryRowContext(ctx, reset)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}
